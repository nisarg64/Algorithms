import javax.swing.text.DefaultEditorKit.InsertBreakAction;

/**
 * 
 */

/**
 * @author Nisarg Binary Tree Implementation and Traversal
 */
public class BTree {

	public class Node {
		Node left;
		Node right;
		int data;

		public Node(int data) {
			this.data = data;
		}
	}

	public static void insertNode(Node root, int data) {
		if (data <= root.data) {
			if (root.left != null) {
				insertNode(root.left, data);
			} else {
				root.left = new Node(data);
			}
		} else if (data > root.data) {
			if (root.right != null) {
				insertNode(root.right, data);
			} else
				root.right = new Node(data);
		}
	}

	public void inOrderTraversal(Node root) {
		inOrderTraversal(root.left);
		System.out.println(root.data + " ");
		inOrderTraversal(root.right);
	}

	public void preOrderTraversal(Node root) {
		System.out.println(root.data + " ");
		inOrderTraversal(root.left);
		inOrderTraversal(root.right);
	}

	public void postOrderTraversal(Node root) {
		inOrderTraversal(root.left);
		inOrderTraversal(root.right);
		System.out.println(root.data + " ");
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Node root = new Node(4);
		insertNode(root, 1);
		insertNode(root, 5);
		insertNode(root, 3);
		insertNode(root, 6);
		insertNode(root, 2);
		insertNode(root, 8);
		insertNode(root, 1);
		
		
	}

}
